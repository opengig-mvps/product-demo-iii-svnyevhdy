
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
      
model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String?
  username          String    @unique
  name              String?
  role              String    @default("user")
  isVerified        Boolean   @default(false)
  verificationToken String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  semenReports      SemenReport[]
  habits            Habit[]
  goals             Goal[]
  reminders         Reminder[]
  articlesRead      ArticleRead[]
  forumPosts        ForumPost[]
  forumReplies      ForumReply[]
  qnaSessions       QnASession[]
}

model SemenReport {
  id                Int       @id @default(autoincrement())
  count             Float
  motility          Float
  morphology        Float
  notes             String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model Habit {
  id                Int       @id @default(autoincrement())
  category          String
  description       String
  dateLogged        DateTime  @default(now())
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model Goal {
  id                Int       @id @default(autoincrement())
  metric            String
  targetValue       Float
  achieved          Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model Reminder {
  id                Int       @id @default(autoincrement())
  description       String
  dateTime          DateTime
  snoozed           Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}

model Article {
  id                Int       @id @default(autoincrement())
  title             String
  content           String
  category          String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  articlesRead      ArticleRead[]
}

model ArticleRead {
  id                Int       @id @default(autoincrement())
  userId            Int
  articleId         Int
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user              User      @relation(fields: [userId], references: [id])
  article           Article   @relation(fields: [articleId], references: [id])

  @@unique([userId, articleId])
}

model ForumPost {
  id                Int       @id @default(autoincrement())
  content           String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])

  replies           ForumReply[]
}

model ForumReply {
  id                Int       @id @default(autoincrement())
  content           String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  postId            Int
  userId            Int
  post              ForumPost @relation(fields: [postId], references: [id])
  user              User      @relation(fields: [userId], references: [id])
}

model QnASession {
  id                Int       @id @default(autoincrement())
  title             String
  description       String
  scheduledDate     DateTime
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  userId            Int
  user              User      @relation(fields: [userId], references: [id])
}